pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
tot <- numeric(0)
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
tot <- c(tot, df[!is.na(df[[pollutant]]), pollutant] )
}
mean(tot, na.rm=T)
}
pollutantmean("specdata", "nitrate", 70:72)
# pollutantmean('specdata', 'sulfate', 1:2)
# pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
tot <- numeric(0)
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
tot <- c(tot, df[!is.na(df[[pollutant]]), pollutant] )
}
mean(tot, na.rm=T)
}
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
complete
complete.cases
sum(1:3)
sum(c(T,F,T))
df
length(df)
rows(df)
nrow(df)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
ids <- integer(length(id))
obs <- integer(length(id))
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
ids[i] <- id[i]
obs[i] <- nrow(na.omit(df))
}
data.frame(ids, obs)
}
nrow(df)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?list.files()
list.files('specdata', pattern='*.csv')
list.files('specdata', pattern='*.csv')
?if
?
if
?
?if
?
if?
df
columns(df)
col(df)
names(df)
?corr
??corr
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
id <- list.files('specdata', pattern='*.csv')
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names[df][2]
colB <- names[df][3]
cc <- corr(df[, colA], df[, colB], na.rm=T)
out <= c(out, cc)
}
}
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
list.files('specdata', pattern='*.csv')
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i])
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names[df][2]
colB <- names[df][3]
cc <- corr(df[, colA], df[, colB], na.rm=T)
out <= c(out, cc)
}
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv', sep='')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i])
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names[df][2]
colB <- names[df][3]
cc <- corr(df[, colA], df[, colB], na.rm=T)
out <= c(out, cc)
}
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names[df][2]
colB <- names[df][3]
cc <- corr(df[, colA], df[, colB], na.rm=T)
out <= c(out, cc)
}
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- corr(df[, colA], df[, colB], na.rm=T)
out <= c(out, cc)
}
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- cor(df[, colA], df[, colB])
out <= c(out, cc)
}
}
}
cr <- corr("specdata", 150)
head(cr)
cr
cr
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
#print(fname)
#print(colnames(df))
#print(pollutant)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- cor(df[, colA], df[, colB])
out <= c(out, cc)
}
}
out
}
cr <- corr("specdata", 150)
head(cr)
cr
colnames(df)
names(df)
rownames(df)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
print(fname)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- cor(df[, colA], df[, colB])
out <= c(out, cc)
}
}
out
}
rownames(df)
cr <- corr("specdata", 150)
colA <- names(df)[2]
colB <- names(df)[3]
colA
colB
cor(df[, colA], df[, colB])
zf = na.omit(df)
zf
cor(zf[, colA], zf[, colB])
# cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
# print(fname)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- cor(df[, colA], df[, colB])
out <- c(out, cc)
}
}
out
}
cor(zf[, colA], zf[, colB])
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
# cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
out <- numeric(0)
fnames <- list.files('specdata', pattern='*.csv')
for (i in seq_along(fnames)) {
fname <- paste('specdata/', fnames[i], sep='')
df <- na.omit(read.csv(fname, header=T))
# print(fname)
rr <- nrow(df)
if (rr >= threshold) {
colA <- names(df)[2]
colB <- names(df)[3]
cc <- cor(df[, colA], df[, colB])
out <- c(out, cc)
}
}
na.omit(out)
}
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
# complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
ids <- integer(length(id))
obs <- integer(length(id))
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
ids[i] <- id[i]
obs[i] <- nrow(na.omit(df))
}
data.frame(ids, obs)
}
complete("specdata", c(2, 4, 8, 10, 12))
# complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
ids <- integer(length(id))
obs <- integer(length(id))
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
ids[i] <- id[i]
obs[i] <- nrow(na.omit(df))
}
data.frame(ids, obs)
}
source("complete.R")
complete("specdata", 1)
?data.frame
# complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
ids <- integer(length(id))
obs <- integer(length(id))
for (i in seq_along(id)) {
fname <- paste('specdata/', sprintf("%03d", id[i]), '.csv', sep='')
df <- read.csv(fname, header=T)
#print(fname)
#print(colnames(df))
#print(pollutant)
ids[i] <- id[i]
obs[i] <- nrow(na.omit(df))
}
id <- ids;
nobs <- obs;
data.frame(id, nobs)
}
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit()
submit()
